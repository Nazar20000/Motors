# Nginx Production Configuration for D.N B Motors V
# Place this file in /etc/nginx/sites-available/motors

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name dnbmotorsv.website www.dnbmotorsv.website;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name dnbmotorsv.website www.dnbmotorsv.website;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/dnbmotorsv.website/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dnbmotorsv.website/privkey.pem;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Document root
    root /var/www/motors/public;
    index index.php index.html;
    
    # Logs
    access_log /var/log/nginx/motors_access.log;
    error_log /var/log/nginx/motors_error.log;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Main location block
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP processing
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Security
        fastcgi_param HTTP_PROXY "";
        fastcgi_param HTTPS $https if_not_empty;
    }
    
    # Static files caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Fonts caching
    location ~* \.(woff|woff2|ttf|eot|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Prevent access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to sensitive files
    location ~* \.(env|log|sql|md|txt|yml|yaml|json|lock|gitignore|htaccess)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Admin panel protection (optional additional security)
    location ~ ^/admin {
        # Rate limiting for admin panel
        limit_req zone=admin burst=10 nodelay;
        limit_req_zone $binary_remote_addr zone=admin:10m rate=10r/m;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Rate limiting configuration
http {
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=admin:10m rate=5r/m;
    
    # Apply rate limiting
    limit_req zone=general burst=20 nodelay;
}
